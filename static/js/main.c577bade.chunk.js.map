{"version":3,"sources":["Canvas.js","App.js","reportWebVitals.js","index.js"],"names":["Canvas","redValue","useEffect","cxt","document","getElementById","getContext","i","j","fillStyle","fillRect","font","fillText","id","width","height","App","useState","redValues","style","position","left","border","borderRadius","margin","textAlign","backgroundColor","boxShadow","map","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"6KA4BeA,MA1Bf,YAA6B,IAAZC,EAAW,EAAXA,SAiBf,OAdAC,qBAAU,WAGV,IAFA,IACIC,EADMC,SAASC,eAAT,kBAAmCJ,IAC/BK,WAAW,MAChBC,EAAI,EAAGA,EAAI,GAAIA,IACvB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACvBL,EAAIM,UAAJ,cAAiC,EAAXR,EAAgB,EAAtC,aAAiD,EAAJM,EAAS,EAAtD,aAAiE,EAAJC,EAAS,EAAtE,KACAL,EAAIO,SARM,GAQKF,EAAI,GAAe,EARxB,GAQ6BD,EAAI,GAAe,EARhD,KAWZJ,EAAIQ,KAAO,eACXR,EAAIM,UAAU,qBACdN,EAAIS,SAAJ,qBAAuC,EAAXX,EAAgB,GAAK,GAAI,MAClD,IAGH,wBACCY,GAAE,kBAAaZ,GACfa,MAAO,IACPC,OAAQ,OCKIC,MAzBf,WACE,MAAkCC,mBAAS,CAC3C,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KADpF,mBAAOC,EAAP,KAIA,OAJA,KAKC,sBACCC,MAAO,CAACC,SAAU,WAAYC,KAAM,OAAQP,MAAO,UADpD,UAGC,sBACCK,MAAO,CAACG,OAAQ,iBAAkBC,aAAc,OAChDC,OAAQ,SAAUC,UAAW,SAC7BC,gBAAiB,OAAQC,UAAW,wBAHrC,UAKC,2CACA,2IAGAT,EAAUU,KAAI,SAACC,GAAD,OACd,cAAC,EAAD,CAAQ5B,SAAU4B,WCVRC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASC,eAAe,SAM1ByB,K","file":"static/js/main.c577bade.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nfunction Canvas({redValue}) {\r\n\tlet offset = 5;\r\n\r\n  useEffect(() => {\r\n\t\tlet obj = document.getElementById(`myCanvas${redValue}`);\r\n\t\tlet cxt = obj.getContext('2d');\r\n\t\tfor (let i = 1; i < 33; i++) {\r\n\t\t\tfor (let j = 1; j < 33; j++) {\r\n\t\t\t\tcxt.fillStyle=`rgb(${(redValue * 8) - 1}, ${(i * 8) - 1}, ${(j * 8) - 1})`;\r\n\t\t\t\tcxt.fillRect(((j - 1) * offset) + 1, ((i - 1) * offset) + 1, offset, offset);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcxt.font = '15px Verdana';\r\n\t\tcxt.fillStyle='rgb(255, 255, 255)';\r\n\t\tcxt.fillText(`Red value: ${(redValue * 8) - 1}`, 10, 20);\r\n  }, []);\r\n\r\n  return (\r\n\t\t<canvas\r\n\t\t\tid={`myCanvas${redValue}`}\r\n\t\t\twidth={32 * offset}\r\n\t\t\theight={32 * offset}\r\n\t\t></canvas>\r\n  );\r\n}\r\n\r\nexport default Canvas;\r\n","import React, { useState } from 'react';\r\nimport Canvas from './Canvas';\r\n\r\nfunction App() {\r\n  const [redValues, setRedValues] = useState([\r\n\t\t1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32\r\n\t]);\r\n\r\n  return (\r\n\t\t\t<div\r\n\t\t\t\tstyle={{position: 'absolute', left: '20px', width: '1280px'}}\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{border: '1px solid gray', borderRadius: '10px', \r\n\t\t\t\t\tmargin: '20px 0', textAlign: 'center',\r\n\t\t\t\t\tbackgroundColor: '#FFC', boxShadow: '5px 10px 8px #888888'}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<h1>Code test</h1>\r\n\t\t\t\t\t<p>Each square cycles through green and blue values (with a fixed red value),\r\n\t\t\t\t\t\t from 7 to 255 in steps of 8.</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t{redValues.map((item) => (\r\n\t\t\t\t\t<Canvas redValue={item}/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}